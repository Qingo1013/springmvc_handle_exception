<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描包-->
    <context:component-scan base-package="cn.qqa"></context:component-scan>
    <!--静态资源-->
    <!--<mvc:resources mapping="/resources/**" location="/resources/"/>-->

    <!--默认视图解析器 -   配上前缀和后缀 简化视图逻辑名称-->
    <bean  class="org.springframework.web.servlet.view.InternalResourceViewResolver" name="viewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--注解驱动底层会用最新的实现类处理 -->
    <mvc:annotation-driven />

    <mvc:resources mapping="**.html" location="/"/>

    <!--<mvc:resources mapping="/assets/**" location="/WEB-INF/static/"></mvc:resources>-->


    <!--设置国际化支持，配置国际化属性资源-->
<!--    <bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
        <property name="basenames">
            <array>
                <value>i18n/login</value>
            </array>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>-->

    <!--
        步骤1.
        使用SessionLocaleResolver来在session中获取Locale对象，
        而不是在requset中获取Locale对象
    -->

<!--
    <bean class="org.springframework.web.servlet.i18n.SessionLocaleResolver" id="localeResolver"></bean>
-->

    <!--
        步骤2.
        方式2：使用springmvc 提供的拦截器接收locale参数(en_US,cn_ZH)，然后设置到Session中去
    -->
<!--    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>
    </mvc:interceptors>-->


    <!--视图控制器 立即访问，配置之后就不需要在controller里面加处理方法-->
    <!--    <mvc:view-controller path="/" view-name="index"/>
        <mvc:view-controller path="/main" view-name="main"/>-->



    <!--配置自定义类型转换器-->
    <!--
        当配置了自定义类型转换器，需要将实现类变为：FormattingConversionServiceFactoryBean
        这样才既能使用自定义的类型转换，又能使用格式化注解
    -->
<!--    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService">
               <property name="converters">
                    <set>
                        <bean class="cn.qqa.converters.MyStringToDateConverter"></bean>
                    </set>
                </property>
    </bean>-->

    <!--配置视图控制器（立即访问）-->
    <!--<mvc:view-controller path="/user/add" view-name="users/add"></mvc:view-controller>-->

    <!--这种方法是独享/login，必须保证控制器处理方法中没有/login的映射，否则就会失效-->
    <!--<mvc:view-controller path="/login" view-name="login"></mvc:view-controller>-->

    <!--基于CommonsMultipartResolver支持文件上传的解析器-->
<!--    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
        &lt;!&ndash;编码方式&ndash;&gt;
        <property name="defaultEncoding" value="UTF-8"></property>
        &lt;!&ndash;文件最大字节数&ndash;&gt;
        <property name="maxUploadSize" value="#{1024*1024*10}"></property>
    </bean>-->
</beans>